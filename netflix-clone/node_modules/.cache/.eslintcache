[{"C:\\Users\\DELL\\OneDrive\\Desktop\\React\\netflix-clone\\src\\index.js":"1","C:\\Users\\DELL\\OneDrive\\Desktop\\React\\netflix-clone\\src\\App.js":"2","C:\\Users\\DELL\\OneDrive\\Desktop\\React\\netflix-clone\\src\\Components\\Row.js":"3","C:\\Users\\DELL\\OneDrive\\Desktop\\React\\netflix-clone\\src\\Components\\Request\\requests.js":"4","C:\\Users\\DELL\\OneDrive\\Desktop\\React\\netflix-clone\\src\\Components\\Request\\axios.js":"5","C:\\Users\\DELL\\OneDrive\\Desktop\\React\\netflix-clone\\src\\Components\\Banner.js":"6","C:\\Users\\DELL\\OneDrive\\Desktop\\React\\netflix-clone\\src\\Components\\Nav.js":"7"},{"size":433,"mtime":1646698811733,"results":"8","hashOfConfig":"9"},{"size":969,"mtime":1646777852878,"results":"10","hashOfConfig":"9"},{"size":1963,"mtime":1646767537846,"results":"11","hashOfConfig":"9"},{"size":724,"mtime":1646698492868,"results":"12","hashOfConfig":"9"},{"size":136,"mtime":1646698456144,"results":"13","hashOfConfig":"9"},{"size":1628,"mtime":1646767710599,"results":"14","hashOfConfig":"9"},{"size":723,"mtime":1646767570961,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"6cz27x",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\OneDrive\\Desktop\\React\\netflix-clone\\src\\index.js",[],[],["40","41"],"C:\\Users\\DELL\\OneDrive\\Desktop\\React\\netflix-clone\\src\\App.js",[],[],"C:\\Users\\DELL\\OneDrive\\Desktop\\React\\netflix-clone\\src\\Components\\Row.js",["42"],[],"import { keyboard } from \"@testing-library/user-event/dist/keyboard\";\r\nimport React,{useEffect,useState} from \"react\";\r\nimport axios from \"./Request/axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\"\r\n\r\n\r\nconst img_url=\"https://image.tmdb.org/t/p/original/\"\r\n\r\n\r\nfunction Row(props){\r\n\r\n\r\n    const[movies,setMovies] = useState([]);\r\n    const[trailerUrl,setTrailerUrl] = useState('');\r\n\r\n    const opts={\r\n        height:\"390\",\r\n        width:\"100%\",\r\n        playerVars:{\r\n            autoplay:1,\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n       async function fetchData(){\r\n           const request = axios.get(props.request)\r\n           setMovies((await request).data.results);\r\n           return request;\r\n       }\r\n       fetchData();\r\n        },[props.request]);\r\n\r\n    const handleClick=(ele)=>{\r\n        if(trailerUrl){\r\n            setTrailerUrl(\"\");\r\n        }else{\r\n        //null,{tmdbId:ele.id}   ele?.name ||\"\"\r\n            movieTrailer( ele?.name ||\"\").then((url)=>{\r\n                console.log(url)\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                console.log(urlParams)\r\n                setTrailerUrl(urlParams.get(\"v\"));\r\n                console.log(urlParams.get(\"v\"));\r\n            }\r\n            ).catch((error)=>{\r\n                console.log(error);\r\n            });\r\n        }\r\n    };\r\n    return(\r\n    <div className=\"row_container\">\r\n        <h2 className=\"title\">{props.title}</h2>\r\n        <div  className=\"row\">\r\n            {movies.map((ele,index)=>{\r\n                return <img key={ele.id} onClick={()=>handleClick(ele)}  className={`img_row ${props.large?\"poster\":\"\"}`} src={`${img_url}${props.large?ele.poster_path:ele.backdrop_path}`} alt={ele.name} />\r\n            })}\r\n        </div>\r\n      {trailerUrl &&  <YouTube className=\"youtube\" videoId={trailerUrl} opts={opts}/>}\r\n    </div>\r\n    );\r\n}\r\nexport default Row;\r\n\r\n","C:\\Users\\DELL\\OneDrive\\Desktop\\React\\netflix-clone\\src\\Components\\Request\\requests.js",[],[],"C:\\Users\\DELL\\OneDrive\\Desktop\\React\\netflix-clone\\src\\Components\\Request\\axios.js",[],[],"C:\\Users\\DELL\\OneDrive\\Desktop\\React\\netflix-clone\\src\\Components\\Banner.js",["43"],[],"import React, {useState,useEffect} from \"react\";\r\nimport axios from \"./Request/axios\";\r\nimport \"./Banner.css\"\r\n\r\n\r\n\r\n\r\nfunction Banner(props){\r\n\r\n    const img_url=\"https://image.tmdb.org/t/p/original/\"\r\n    const[poster,setPoster] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        async function getPoster(){\r\n            const response = axios.get(props.request)\r\n            // console.log(response)\r\n            let n = Math.floor(Math.random()*((await response).data.results.length)-1)\r\n            // console.log(n)\r\n            setPoster((await response).data.results[n])\r\n            // console.log((await response).data.results[n])\r\n        }\r\n        getPoster();\r\n    },[])\r\n\r\n    function truncate(data){\r\n        return data?data.substr(0,100)+\"...\":\"No data\"\r\n    }\r\n\r\n    return(\r\n   \r\n        <header className=\"banner_container\"\r\n        style={{\r\n            backgroundSize:\"cover\",\r\n            backgroundImage:`url(${img_url}${poster.backdrop_path||poster.poster_path})`,\r\n            backgroundPosition:\"center center\",\r\n            objectFit:\"contain\",\r\n          \r\n        }}>\r\n            <div className=\"poster_data\">\r\n                <div className=\"poster_info\">\r\n            <h1 className=\"poster_name\">{poster.name}</h1>\r\n            <button className=\"banner_button\">Play</button>\r\n            <button className=\"banner_button\">My List</button>\r\n            <p className=\"poster_overview\">{truncate(poster.overview)}</p>\r\n            </div>\r\n            <div className=\"banner_fadeBottom\"></div>\r\n            </div>\r\n\r\n\r\n            \r\n        </header>\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default Banner;","C:\\Users\\DELL\\OneDrive\\Desktop\\React\\netflix-clone\\src\\Components\\Nav.js",[],[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":10,"nodeType":"50","messageId":"51","endLine":1,"endColumn":18},{"ruleId":"52","severity":1,"message":"53","line":23,"column":7,"nodeType":"54","endLine":23,"endColumn":9,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'keyboard' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.request'. Either include it or remove the dependency array.","ArrayExpression",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [props.request]",{"range":"61","text":"62"},[679,681],"[props.request]"]