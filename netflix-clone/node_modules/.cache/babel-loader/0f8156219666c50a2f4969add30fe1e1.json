{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\React\\\\netflix-clone\\\\src\\\\Components\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport { keyboard } from \"@testing-library/user-event/dist/keyboard\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"./Request/axios\";\nimport \"./Row.css\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst img_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row(props) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState('');\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  useEffect(() => {\n    async function fetchData() {\n      const request = axios.get(props.request);\n      setMovies((await request).data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [props.request]);\n\n  const handleClick = ele => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer(\"Vikings: Valhalla\" || \"\").then(url => {\n        console.log(url);\n        const urlParams = new URLSearchParams(new URL(url).search);\n        console.log(urlParams);\n        setTrailerUrl(urlParams.get(\"v\"));\n        console.log(urlParams.get(\"v\"));\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: movies.map((ele, index) => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: `img_row ${props.large ? \"poster\" : \"\"}`,\n          src: `${img_url}${props.large ? ele.poster_path : ele.backdrop_path}`,\n          alt: ele.name\n        }, ele.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(YouTube, {\n      className: \"youtube\",\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"ksm51Vk9In4Mp/Rr0RWCxQaCbyQ=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Desktop/React/netflix-clone/src/Components/Row.js"],"names":["keyboard","React","useEffect","useState","axios","YouTube","movieTrailer","img_url","Row","props","movies","setMovies","trailerUrl","setTrailerUrl","opts","height","width","playerVars","autoplay","fetchData","request","get","data","results","handleClick","ele","then","url","console","log","urlParams","URLSearchParams","URL","search","catch","error","title","map","index","large","poster_path","backdrop_path","name","id"],"mappings":"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","sourcesContent":["import { keyboard } from \"@testing-library/user-event/dist/keyboard\";\r\nimport React,{useEffect,useState} from \"react\";\r\nimport axios from \"./Request/axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\"\r\n\r\n\r\nconst img_url=\"https://image.tmdb.org/t/p/original/\"\r\n\r\n\r\nfunction Row(props){\r\n\r\n\r\n    const[movies,setMovies] = useState([]);\r\n    const[trailerUrl,setTrailerUrl] = useState('');\r\n\r\n    const opts={\r\n        height:\"390\",\r\n        width:\"100%\",\r\n        playerVars:{\r\n            autoplay:1,\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n       async function fetchData(){\r\n           const request = axios.get(props.request)\r\n           setMovies((await request).data.results);\r\n           return request;\r\n       }\r\n       fetchData();\r\n        },[props.request]);\r\n\r\n    const handleClick=(ele)=>{\r\n        if(trailerUrl){\r\n            setTrailerUrl(\"\");\r\n        }else{\r\n            movieTrailer(\"Vikings: Valhalla\" || \"\").then((url)=>{\r\n                console.log(url)\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                console.log(urlParams)\r\n                setTrailerUrl(urlParams.get(\"v\"));\r\n                console.log(urlParams.get(\"v\"));\r\n            }\r\n            ).catch((error)=>{\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n    return(\r\n    <div className=\"row_container\">\r\n        <h2 className=\"title\">{props.title}</h2>\r\n        <div  className=\"row\">\r\n            {movies.map((ele,index)=>{\r\n                return <img key={ele.id}  className={`img_row ${props.large?\"poster\":\"\"}`} src={`${img_url}${props.large?ele.poster_path:ele.backdrop_path}`} alt={ele.name} />\r\n            })}\r\n        </div>\r\n      {trailerUrl &&  <YouTube className=\"youtube\" videoId={trailerUrl} opts={opts}/>}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Row;\r\n\r\n"]},"metadata":{},"sourceType":"module"}