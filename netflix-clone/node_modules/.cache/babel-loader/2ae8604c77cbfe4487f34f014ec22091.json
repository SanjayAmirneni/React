{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nconst url_1 = require(\"url\");\n\nconst degenerator_1 = require(\"degenerator\");\n/**\n * Built-in PAC functions.\n */\n\n\nconst dateRange_1 = __importDefault(require(\"./dateRange\"));\n\nconst dnsDomainIs_1 = __importDefault(require(\"./dnsDomainIs\"));\n\nconst dnsDomainLevels_1 = __importDefault(require(\"./dnsDomainLevels\"));\n\nconst dnsResolve_1 = __importDefault(require(\"./dnsResolve\"));\n\nconst isInNet_1 = __importDefault(require(\"./isInNet\"));\n\nconst isPlainHostName_1 = __importDefault(require(\"./isPlainHostName\"));\n\nconst isResolvable_1 = __importDefault(require(\"./isResolvable\"));\n\nconst localHostOrDomainIs_1 = __importDefault(require(\"./localHostOrDomainIs\"));\n\nconst myIpAddress_1 = __importDefault(require(\"./myIpAddress\"));\n\nconst shExpMatch_1 = __importDefault(require(\"./shExpMatch\"));\n\nconst timeRange_1 = __importDefault(require(\"./timeRange\"));\n\nconst weekdayRange_1 = __importDefault(require(\"./weekdayRange\"));\n/**\n * Returns an asynchronous `FindProxyForURL()` function\n * from the given JS string (from a PAC file).\n *\n * @param {String} str JS string\n * @param {Object} opts optional \"options\" object\n * @return {Function} async resolver function\n */\n\n\nfunction createPacResolver(_str) {\n  let _opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  const str = Buffer.isBuffer(_str) ? _str.toString('utf8') : _str; // The sandbox to use for the `vm` context.\n\n  const sandbox = Object.assign(Object.assign({}, createPacResolver.sandbox), _opts.sandbox);\n  const opts = Object.assign(Object.assign({\n    filename: 'proxy.pac'\n  }, _opts), {\n    sandbox\n  }); // Construct the array of async function names to add `await` calls to.\n\n  const names = Object.keys(sandbox).filter(k => isAsyncFunction(sandbox[k])); // Compile the JS `FindProxyForURL()` function into an async function.\n\n  const resolver = degenerator_1.compile(str, 'FindProxyForURL', names, opts);\n\n  function FindProxyForURL(url, _host, _callback) {\n    let host = null;\n    let callback = null;\n\n    if (typeof _callback === 'function') {\n      callback = _callback;\n    }\n\n    if (typeof _host === 'string') {\n      host = _host;\n    } else if (typeof _host === 'function') {\n      callback = _host;\n    }\n\n    if (!host) {\n      host = url_1.parse(url).hostname;\n    }\n\n    if (!host) {\n      throw new TypeError('Could not determine `host`');\n    }\n\n    const promise = resolver(url, host);\n\n    if (typeof callback === 'function') {\n      toCallback(promise, callback);\n    } else {\n      return promise;\n    }\n  }\n\n  Object.defineProperty(FindProxyForURL, 'toString', {\n    value: () => resolver.toString(),\n    enumerable: false\n  });\n  return FindProxyForURL;\n}\n\n(function (createPacResolver) {\n  createPacResolver.sandbox = Object.freeze({\n    alert: function () {\n      let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return console.log('%s', message);\n    },\n    dateRange: dateRange_1.default,\n    dnsDomainIs: dnsDomainIs_1.default,\n    dnsDomainLevels: dnsDomainLevels_1.default,\n    dnsResolve: dnsResolve_1.default,\n    isInNet: isInNet_1.default,\n    isPlainHostName: isPlainHostName_1.default,\n    isResolvable: isResolvable_1.default,\n    localHostOrDomainIs: localHostOrDomainIs_1.default,\n    myIpAddress: myIpAddress_1.default,\n    shExpMatch: shExpMatch_1.default,\n    timeRange: timeRange_1.default,\n    weekdayRange: weekdayRange_1.default\n  });\n})(createPacResolver || (createPacResolver = {}));\n\nfunction toCallback(promise, callback) {\n  promise.then(rtn => callback(null, rtn), callback);\n}\n\nfunction isAsyncFunction(v) {\n  if (typeof v !== 'function') return false; // Native `AsyncFunction`\n\n  if (v.constructor.name === 'AsyncFunction') return true; // TypeScript compiled\n\n  if (String(v).indexOf('__awaiter(') !== -1) return true; // Legacy behavior - set `async` property on the function\n\n  return Boolean(v.async);\n}\n\nmodule.exports = createPacResolver;","map":{"version":3,"mappings":"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","names":["createPacResolver","_str","_opts","str","Buffer","isBuffer","toString","sandbox","opts","filename","names","Object","keys","filter","k","isAsyncFunction","resolver","degenerator_1","FindProxyForURL","url","_host","_callback","host","callback","url_1","hostname","TypeError","promise","toCallback","defineProperty","value","enumerable","freeze","alert","message","console","log","dateRange","dateRange_1","dnsDomainIs","dnsDomainIs_1","dnsDomainLevels","dnsDomainLevels_1","dnsResolve","dnsResolve_1","isInNet","isInNet_1","isPlainHostName","isPlainHostName_1","isResolvable","isResolvable_1","localHostOrDomainIs","localHostOrDomainIs_1","myIpAddress","myIpAddress_1","shExpMatch","shExpMatch_1","timeRange","timeRange_1","weekdayRange","weekdayRange_1","then","rtn","v","constructor","name","String","indexOf","Boolean","async","module"],"sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}