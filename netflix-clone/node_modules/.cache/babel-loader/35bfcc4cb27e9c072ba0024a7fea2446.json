{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Constants = exports.EMULATOR_DESCRIPTION = exports.FIND_AVAILBLE_PORT_BY_DEFAULT = void 0;\n\nconst url = require(\"url\");\n\nconst DEFAULT_PORTS = {\n  ui: 4000,\n  hub: 4400,\n  logging: 4500,\n  hosting: 5000,\n  functions: 5001,\n  extensions: 5001,\n  firestore: 8080,\n  pubsub: 8085,\n  database: 9000,\n  auth: 9099,\n  storage: 9199\n};\nexports.FIND_AVAILBLE_PORT_BY_DEFAULT = {\n  ui: true,\n  hub: true,\n  logging: true,\n  hosting: false,\n  functions: false,\n  firestore: false,\n  database: false,\n  pubsub: false,\n  auth: false,\n  storage: false,\n  extensions: false\n};\nexports.EMULATOR_DESCRIPTION = {\n  ui: \"Emulator UI\",\n  hub: \"emulator hub\",\n  logging: \"Logging Emulator\",\n  hosting: \"Hosting Emulator\",\n  functions: \"Functions Emulator\",\n  firestore: \"Firestore Emulator\",\n  database: \"Database Emulator\",\n  pubsub: \"Pub/Sub Emulator\",\n  auth: \"Authentication Emulator\",\n  storage: \"Storage Emulator\",\n  extensions: \"Extensions Emulator\"\n};\nconst DEFAULT_HOST = \"localhost\";\n\nclass Constants {\n  static getServiceName(service) {\n    switch (service) {\n      case this.SERVICE_FIRESTORE:\n        return \"firestore\";\n\n      case this.SERVICE_REALTIME_DATABASE:\n        return \"database\";\n\n      case this.SERVICE_PUBSUB:\n        return \"pubsub\";\n\n      case this.SERVICE_ANALYTICS:\n        return \"analytics\";\n\n      case this.SERVICE_AUTH:\n        return \"auth\";\n\n      case this.SERVICE_CRASHLYTICS:\n        return \"crashlytics\";\n\n      case this.SERVICE_REMOTE_CONFIG:\n        return \"remote config\";\n\n      case this.SERVICE_STORAGE:\n        return \"storage\";\n\n      case this.SERVICE_TEST_LAB:\n        return \"test lab\";\n\n      default:\n        return service;\n    }\n  }\n\n  static getDefaultHost(emulator) {\n    return DEFAULT_HOST;\n  }\n\n  static getDefaultPort(emulator) {\n    return DEFAULT_PORTS[emulator];\n  }\n\n  static description(name) {\n    return exports.EMULATOR_DESCRIPTION[name];\n  }\n\n  static normalizeHost(host) {\n    let normalized = host;\n\n    if (!normalized.startsWith(\"http\")) {\n      normalized = `http://${normalized}`;\n    }\n\n    const u = url.parse(normalized);\n    return u.hostname || DEFAULT_HOST;\n  }\n\n  static isDemoProject(projectId) {\n    return !!projectId && projectId.startsWith(this.FAKE_PROJECT_ID_PREFIX);\n  }\n\n}\n\nexports.Constants = Constants;\nConstants.FAKE_PROJECT_ID_PREFIX = \"demo-\";\nConstants.DEFAULT_DATABASE_EMULATOR_NAMESPACE = \"fake-server\";\nConstants.FIRESTORE_EMULATOR_HOST = \"FIRESTORE_EMULATOR_HOST\";\nConstants.FIREBASE_DATABASE_EMULATOR_HOST = \"FIREBASE_DATABASE_EMULATOR_HOST\";\nConstants.FIREBASE_AUTH_EMULATOR_HOST = \"FIREBASE_AUTH_EMULATOR_HOST\";\nConstants.FIREBASE_STORAGE_EMULATOR_HOST = \"FIREBASE_STORAGE_EMULATOR_HOST\";\nConstants.CLOUD_STORAGE_EMULATOR_HOST = \"STORAGE_EMULATOR_HOST\";\nConstants.FIREBASE_EMULATOR_HUB = \"FIREBASE_EMULATOR_HUB\";\nConstants.SERVICE_FIRESTORE = \"firestore.googleapis.com\";\nConstants.SERVICE_REALTIME_DATABASE = \"firebaseio.com\";\nConstants.SERVICE_PUBSUB = \"pubsub.googleapis.com\";\nConstants.SERVICE_ANALYTICS = \"app-measurement.com\";\nConstants.SERVICE_AUTH = \"firebaseauth.googleapis.com\";\nConstants.SERVICE_CRASHLYTICS = \"fabric.io\";\nConstants.SERVICE_REMOTE_CONFIG = \"firebaseremoteconfig.googleapis.com\";\nConstants.SERVICE_STORAGE = \"storage.googleapis.com\";\nConstants.SERVICE_TEST_LAB = \"testing.googleapis.com\";","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Desktop/React/netflix-clone/node_modules/firebase-tools/lib/emulator/constants.js"],"names":["Object","defineProperty","exports","value","Constants","EMULATOR_DESCRIPTION","FIND_AVAILBLE_PORT_BY_DEFAULT","url","require","DEFAULT_PORTS","ui","hub","logging","hosting","functions","extensions","firestore","pubsub","database","auth","storage","DEFAULT_HOST","getServiceName","service","SERVICE_FIRESTORE","SERVICE_REALTIME_DATABASE","SERVICE_PUBSUB","SERVICE_ANALYTICS","SERVICE_AUTH","SERVICE_CRASHLYTICS","SERVICE_REMOTE_CONFIG","SERVICE_STORAGE","SERVICE_TEST_LAB","getDefaultHost","emulator","getDefaultPort","description","name","normalizeHost","host","normalized","startsWith","u","parse","hostname","isDemoProject","projectId","FAKE_PROJECT_ID_PREFIX","DEFAULT_DATABASE_EMULATOR_NAMESPACE","FIRESTORE_EMULATOR_HOST","FIREBASE_DATABASE_EMULATOR_HOST","FIREBASE_AUTH_EMULATOR_HOST","FIREBASE_STORAGE_EMULATOR_HOST","CLOUD_STORAGE_EMULATOR_HOST","FIREBASE_EMULATOR_HUB"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Constants = exports.EMULATOR_DESCRIPTION = exports.FIND_AVAILBLE_PORT_BY_DEFAULT = void 0;\nconst url = require(\"url\");\nconst DEFAULT_PORTS = {\n    ui: 4000,\n    hub: 4400,\n    logging: 4500,\n    hosting: 5000,\n    functions: 5001,\n    extensions: 5001,\n    firestore: 8080,\n    pubsub: 8085,\n    database: 9000,\n    auth: 9099,\n    storage: 9199,\n};\nexports.FIND_AVAILBLE_PORT_BY_DEFAULT = {\n    ui: true,\n    hub: true,\n    logging: true,\n    hosting: false,\n    functions: false,\n    firestore: false,\n    database: false,\n    pubsub: false,\n    auth: false,\n    storage: false,\n    extensions: false,\n};\nexports.EMULATOR_DESCRIPTION = {\n    ui: \"Emulator UI\",\n    hub: \"emulator hub\",\n    logging: \"Logging Emulator\",\n    hosting: \"Hosting Emulator\",\n    functions: \"Functions Emulator\",\n    firestore: \"Firestore Emulator\",\n    database: \"Database Emulator\",\n    pubsub: \"Pub/Sub Emulator\",\n    auth: \"Authentication Emulator\",\n    storage: \"Storage Emulator\",\n    extensions: \"Extensions Emulator\",\n};\nconst DEFAULT_HOST = \"localhost\";\nclass Constants {\n    static getServiceName(service) {\n        switch (service) {\n            case this.SERVICE_FIRESTORE:\n                return \"firestore\";\n            case this.SERVICE_REALTIME_DATABASE:\n                return \"database\";\n            case this.SERVICE_PUBSUB:\n                return \"pubsub\";\n            case this.SERVICE_ANALYTICS:\n                return \"analytics\";\n            case this.SERVICE_AUTH:\n                return \"auth\";\n            case this.SERVICE_CRASHLYTICS:\n                return \"crashlytics\";\n            case this.SERVICE_REMOTE_CONFIG:\n                return \"remote config\";\n            case this.SERVICE_STORAGE:\n                return \"storage\";\n            case this.SERVICE_TEST_LAB:\n                return \"test lab\";\n            default:\n                return service;\n        }\n    }\n    static getDefaultHost(emulator) {\n        return DEFAULT_HOST;\n    }\n    static getDefaultPort(emulator) {\n        return DEFAULT_PORTS[emulator];\n    }\n    static description(name) {\n        return exports.EMULATOR_DESCRIPTION[name];\n    }\n    static normalizeHost(host) {\n        let normalized = host;\n        if (!normalized.startsWith(\"http\")) {\n            normalized = `http://${normalized}`;\n        }\n        const u = url.parse(normalized);\n        return u.hostname || DEFAULT_HOST;\n    }\n    static isDemoProject(projectId) {\n        return !!projectId && projectId.startsWith(this.FAKE_PROJECT_ID_PREFIX);\n    }\n}\nexports.Constants = Constants;\nConstants.FAKE_PROJECT_ID_PREFIX = \"demo-\";\nConstants.DEFAULT_DATABASE_EMULATOR_NAMESPACE = \"fake-server\";\nConstants.FIRESTORE_EMULATOR_HOST = \"FIRESTORE_EMULATOR_HOST\";\nConstants.FIREBASE_DATABASE_EMULATOR_HOST = \"FIREBASE_DATABASE_EMULATOR_HOST\";\nConstants.FIREBASE_AUTH_EMULATOR_HOST = \"FIREBASE_AUTH_EMULATOR_HOST\";\nConstants.FIREBASE_STORAGE_EMULATOR_HOST = \"FIREBASE_STORAGE_EMULATOR_HOST\";\nConstants.CLOUD_STORAGE_EMULATOR_HOST = \"STORAGE_EMULATOR_HOST\";\nConstants.FIREBASE_EMULATOR_HUB = \"FIREBASE_EMULATOR_HUB\";\nConstants.SERVICE_FIRESTORE = \"firestore.googleapis.com\";\nConstants.SERVICE_REALTIME_DATABASE = \"firebaseio.com\";\nConstants.SERVICE_PUBSUB = \"pubsub.googleapis.com\";\nConstants.SERVICE_ANALYTICS = \"app-measurement.com\";\nConstants.SERVICE_AUTH = \"firebaseauth.googleapis.com\";\nConstants.SERVICE_CRASHLYTICS = \"fabric.io\";\nConstants.SERVICE_REMOTE_CONFIG = \"firebaseremoteconfig.googleapis.com\";\nConstants.SERVICE_STORAGE = \"storage.googleapis.com\";\nConstants.SERVICE_TEST_LAB = \"testing.googleapis.com\";\n"]},"metadata":{},"sourceType":"script"}