{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/DELL/OneDrive/Desktop/React/netflix-clone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/DELL/OneDrive/Desktop/React/netflix-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\React\\\\netflix-clone\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{keyboard}from\"@testing-library/user-event/dist/keyboard\";import React,{useEffect,useState}from\"react\";import axios from\"./Request/axios\";import\"./Row.css\";import YouTube from\"react-youtube\";import movieTrailer from\"movie-trailer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var img_url=\"https://image.tmdb.org/t/p/original/\";function Row(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),trailerUrl=_useState4[0],setTrailerUrl=_useState4[1];var opts={height:\"390\",width:\"100%\",playerVars:{autoplay:1}};useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:request=axios.get(props.request);_context.t0=setMovies;_context.next=4;return request;case 4:_context.t1=_context.sent.data.results;(0,_context.t0)(_context.t1);return _context.abrupt(\"return\",request);case 7:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[props.request]);var handleClick=function handleClick(ele){if(trailerUrl){setTrailerUrl(\"\");}else{//null,{tmdbId:ele.id}   ele?.name ||\"\"\nmovieTrailer((ele===null||ele===void 0?void 0:ele.name)||\"\").then(function(url){console.log(url);var urlParams=new URLSearchParams(new URL(url).search);console.log(urlParams);setTrailerUrl(urlParams.get(\"v\"));console.log(urlParams.get(\"v\"));}).catch(function(error){console.log(error);});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"row_container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"title\",children:props.title}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:movies.map(function(ele,index){return/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return handleClick(ele);},className:\"img_row \".concat(props.large?\"poster\":\"\"),src:\"\".concat(img_url).concat(props.large?ele.poster_path:ele.backdrop_path),alt:ele.name},ele.id);})}),trailerUrl&&/*#__PURE__*/_jsx(YouTube,{className:\"youtube\",videoId:trailerUrl,opts:opts})]});}export default Row;","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Desktop/React/netflix-clone/src/Components/Row.js"],"names":["keyboard","React","useEffect","useState","axios","YouTube","movieTrailer","img_url","Row","props","movies","setMovies","trailerUrl","setTrailerUrl","opts","height","width","playerVars","autoplay","fetchData","request","get","data","results","handleClick","ele","name","then","url","console","log","urlParams","URLSearchParams","URL","search","catch","error","title","map","index","large","poster_path","backdrop_path","id"],"mappings":"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","sourcesContent":["import { keyboard } from \"@testing-library/user-event/dist/keyboard\";\r\nimport React,{useEffect,useState} from \"react\";\r\nimport axios from \"./Request/axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\"\r\n\r\n\r\nconst img_url=\"https://image.tmdb.org/t/p/original/\"\r\n\r\n\r\nfunction Row(props){\r\n\r\n\r\n    const[movies,setMovies] = useState([]);\r\n    const[trailerUrl,setTrailerUrl] = useState('');\r\n\r\n    const opts={\r\n        height:\"390\",\r\n        width:\"100%\",\r\n        playerVars:{\r\n            autoplay:1,\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n       async function fetchData(){\r\n           const request = axios.get(props.request)\r\n           setMovies((await request).data.results);\r\n           return request;\r\n       }\r\n       fetchData();\r\n        },[props.request]);\r\n\r\n    const handleClick=(ele)=>{\r\n        if(trailerUrl){\r\n            setTrailerUrl(\"\");\r\n        }else{\r\n        //null,{tmdbId:ele.id}   ele?.name ||\"\"\r\n            movieTrailer( ele?.name ||\"\").then((url)=>{\r\n                console.log(url)\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                console.log(urlParams)\r\n                setTrailerUrl(urlParams.get(\"v\"));\r\n                console.log(urlParams.get(\"v\"));\r\n            }\r\n            ).catch((error)=>{\r\n                console.log(error);\r\n            });\r\n        }\r\n    };\r\n    return(\r\n    <div className=\"row_container\">\r\n        <h2 className=\"title\">{props.title}</h2>\r\n        <div  className=\"row\">\r\n            {movies.map((ele,index)=>{\r\n                return <img key={ele.id} onClick={()=>handleClick(ele)}  className={`img_row ${props.large?\"poster\":\"\"}`} src={`${img_url}${props.large?ele.poster_path:ele.backdrop_path}`} alt={ele.name} />\r\n            })}\r\n        </div>\r\n      {trailerUrl &&  <YouTube className=\"youtube\" videoId={trailerUrl} opts={opts}/>}\r\n    </div>\r\n    );\r\n}\r\nexport default Row;\r\n\r\n"]},"metadata":{},"sourceType":"module"}