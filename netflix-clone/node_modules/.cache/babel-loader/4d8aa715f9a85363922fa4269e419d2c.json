{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\React\\\\netflix-clone\\\\src\\\\Components\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport { keyboard } from \"@testing-library/user-event/dist/keyboard\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"./Request/axios\";\nimport \"./Row.css\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst img_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row(props) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState('');\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  useEffect(() => {\n    async function fetchData() {\n      const request = axios.get(props.request);\n      setMovies((await request).data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [props.request]);\n\n  const handleClick = ele => {\n    if (trailerUrl) {\n      setTrailerUrl('');\n    } else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: movies.map((ele, index) => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          onclick: handleClick(ele),\n          className: `img_row ${props.large ? \"poster\" : \"\"}`,\n          src: `${img_url}${props.large ? ele.poster_path : ele.backdrop_path}`,\n          alt: ele.name\n        }, ele.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(YouTube, {\n      className: \"youtube\",\n      videoId: \"\",\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"ksm51Vk9In4Mp/Rr0RWCxQaCbyQ=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Desktop/React/netflix-clone/src/Components/Row.js"],"names":["keyboard","React","useEffect","useState","axios","YouTube","movieTrailer","img_url","Row","props","movies","setMovies","trailerUrl","setTrailerUrl","opts","height","width","playerVars","autoplay","fetchData","request","get","data","results","handleClick","ele","title","map","index","large","poster_path","backdrop_path","name","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,2CAAzB;AACA,OAAOC,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAGA,MAAMC,OAAO,GAAC,sCAAd;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAmB;AAAA;;AAGf,QAAK,CAACC,MAAD,EAAQC,SAAR,IAAqBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAK,CAACS,UAAD,EAAYC,aAAZ,IAA6BV,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMW,IAAI,GAAC;AACPC,IAAAA,MAAM,EAAC,KADA;AAEPC,IAAAA,KAAK,EAAC,MAFC;AAGPC,IAAAA,UAAU,EAAC;AACPC,MAAAA,QAAQ,EAAC;AADF;AAHJ,GAAX;AAQAhB,EAAAA,SAAS,CAAC,MAAI;AACX,mBAAeiB,SAAf,GAA0B;AACtB,YAAMC,OAAO,GAAGhB,KAAK,CAACiB,GAAN,CAAUZ,KAAK,CAACW,OAAhB,CAAhB;AACAT,MAAAA,SAAS,CAAC,CAAC,MAAMS,OAAP,EAAgBE,IAAhB,CAAqBC,OAAtB,CAAT;AACA,aAAOH,OAAP;AACH;;AACDD,IAAAA,SAAS;AACP,GAPI,EAOH,CAACV,KAAK,CAACW,OAAP,CAPG,CAAT;;AASA,QAAMI,WAAW,GAAEC,GAAD,IAAO;AACrB,QAAGb,UAAH,EAAc;AACVC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACH,KAFD,MAEK,CAGJ;AACJ,GAPD;;AAQA,sBACA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,gBAAuBJ,KAAK,CAACiB;AAA7B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA,gBACKhB,MAAM,CAACiB,GAAP,CAAW,CAACF,GAAD,EAAKG,KAAL,KAAa;AACrB,4BAAO;AACP,UAAA,OAAO,EAAEJ,WAAW,CAACC,GAAD,CADb;AACoB,UAAA,SAAS,EAAG,WAAUhB,KAAK,CAACoB,KAAN,GAAY,QAAZ,GAAqB,EAAG,EADlE;AACqE,UAAA,GAAG,EAAG,GAAEtB,OAAQ,GAAEE,KAAK,CAACoB,KAAN,GAAYJ,GAAG,CAACK,WAAhB,GAA4BL,GAAG,CAACM,aAAc,EADrI;AACwI,UAAA,GAAG,EAAEN,GAAG,CAACO;AADjJ,WAAUP,GAAG,CAACQ,EAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEH,OAHA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,EAQGrB,UAAU,iBAAK,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,SAAnB;AAA6B,MAAA,OAAO,EAAC,EAArC;AAAwC,MAAA,IAAI,EAAEE;AAA9C;AAAA;AAAA;AAAA;AAAA,YARlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAYH;;GA3CQN,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import { keyboard } from \"@testing-library/user-event/dist/keyboard\";\r\nimport React,{useEffect,useState} from \"react\";\r\nimport axios from \"./Request/axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\"\r\n\r\n\r\nconst img_url=\"https://image.tmdb.org/t/p/original/\"\r\n\r\n\r\nfunction Row(props){\r\n\r\n\r\n    const[movies,setMovies] = useState([]);\r\n    const[trailerUrl,setTrailerUrl] = useState('');\r\n\r\n    const opts={\r\n        height:\"390\",\r\n        width:\"100%\",\r\n        playerVars:{\r\n            autoplay:1,\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n       async function fetchData(){\r\n           const request = axios.get(props.request)\r\n           setMovies((await request).data.results);\r\n           return request;\r\n       }\r\n       fetchData();\r\n        },[props.request]);\r\n\r\n    const handleClick=(ele)=>{\r\n        if(trailerUrl){\r\n            setTrailerUrl('');\r\n        }else{\r\n\r\n\r\n        }\r\n    }\r\n    return(\r\n    <div className=\"row_container\">\r\n        <h2 className=\"title\">{props.title}</h2>\r\n        <div  className=\"row\">\r\n            {movies.map((ele,index)=>{\r\n                return <img key={ele.id} \r\n                onclick={handleClick(ele)} className={`img_row ${props.large?\"poster\":\"\"}`} src={`${img_url}${props.large?ele.poster_path:ele.backdrop_path}`} alt={ele.name} />\r\n            })}\r\n        </div>\r\n      {trailerUrl &&  <YouTube className=\"youtube\" videoId=\"\" opts={opts}/>}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Row;\r\n\r\n"]},"metadata":{},"sourceType":"module"}