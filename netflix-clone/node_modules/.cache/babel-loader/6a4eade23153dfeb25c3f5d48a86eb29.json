{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"lodash\");\n\nvar querystring = require(\"querystring\");\n\nvar request = require(\"request\");\n\nvar url = require(\"url\");\n\nvar {\n  Constants\n} = require(\"./emulator/constants\");\n\nvar {\n  FirebaseError\n} = require(\"./error\");\n\nconst {\n  logger\n} = require(\"./logger\");\n\nvar responseToError = require(\"./responseToError\");\n\nvar scopes = require(\"./scopes\");\n\nvar utils = require(\"./utils\");\n\nvar CLI_VERSION = require(\"../package.json\").version;\n\nvar accessToken;\nvar refreshToken;\nvar commandScopes;\n\nvar _request = function (options, logOptions) {\n  logOptions = logOptions || {};\n  var qsLog = \"\";\n  var bodyLog = \"<request body omitted>\";\n\n  if (options.qs && !logOptions.skipQueryParams) {\n    qsLog = JSON.stringify(options.qs);\n  }\n\n  if (!logOptions.skipRequestBody) {\n    bodyLog = options.body || options.form || \"\";\n  }\n\n  logger.debug(\">>> HTTP REQUEST\", options.method, options.url, qsLog, \"\\n\", bodyLog);\n  options.headers = options.headers || {};\n  options.headers[\"connection\"] = \"keep-alive\";\n  return new Promise(function (resolve, reject) {\n    var req = request(options, function (err, response, body) {\n      if (err) {\n        return reject(new FirebaseError(\"Server Error. \" + err.message, {\n          original: err,\n          exit: 2\n        }));\n      }\n\n      logger.debug(\"<<< HTTP RESPONSE\", response.statusCode, response.headers);\n\n      if (response.statusCode >= 400 && !logOptions.skipResponseBody) {\n        logger.debug(\"<<< HTTP RESPONSE BODY\", response.body);\n\n        if (!options.resolveOnHTTPError) {\n          return reject(responseToError(response, body));\n        }\n      }\n\n      return resolve({\n        status: response.statusCode,\n        response: response,\n        body: body\n      });\n    });\n\n    if (_.size(options.files) > 0) {\n      var form = req.form();\n\n      _.forEach(options.files, function (details, param) {\n        form.append(param, details.stream, {\n          knownLength: details.knownLength,\n          filename: details.filename,\n          contentType: details.contentType\n        });\n      });\n    }\n  });\n};\n\nvar _appendQueryData = function (path, data) {\n  if (data && _.size(data) > 0) {\n    path += _.includes(path, \"?\") ? \"&\" : \"?\";\n    path += querystring.stringify(data);\n  }\n\n  return path;\n};\n\nvar api = {\n  authProxyOrigin: utils.envOverride(\"FIREBASE_AUTHPROXY_URL\", \"https://auth.firebase.tools\"),\n  clientId: utils.envOverride(\"FIREBASE_CLIENT_ID\", \"563584335869-fgrhgmd47bqnekij5i8b5pr03ho849e6.apps.googleusercontent.com\"),\n  clientSecret: utils.envOverride(\"FIREBASE_CLIENT_SECRET\", \"j9iVZfS8kkCEFUPaAeJV0sAi\"),\n  cloudbillingOrigin: utils.envOverride(\"FIREBASE_CLOUDBILLING_URL\", \"https://cloudbilling.googleapis.com\"),\n  cloudloggingOrigin: utils.envOverride(\"FIREBASE_CLOUDLOGGING_URL\", \"https://logging.googleapis.com\"),\n  cloudMonitoringOrigin: utils.envOverride(\"CLOUD_MONITORING_URL\", \"https://monitoring.googleapis.com\"),\n  containerRegistryDomain: utils.envOverride(\"CONTAINER_REGISTRY_DOMAIN\", \"gcr.io\"),\n  artifactRegistryDomain: utils.envOverride(\"ARTIFACT_REGISTRY_DOMAIN\", \"https://artifactregistry.googleapis.com\"),\n  appDistributionOrigin: utils.envOverride(\"FIREBASE_APP_DISTRIBUTION_URL\", \"https://firebaseappdistribution.googleapis.com\"),\n  appengineOrigin: utils.envOverride(\"FIREBASE_APPENGINE_URL\", \"https://appengine.googleapis.com\"),\n  authOrigin: utils.envOverride(\"FIREBASE_AUTH_URL\", \"https://accounts.google.com\"),\n  consoleOrigin: utils.envOverride(\"FIREBASE_CONSOLE_URL\", \"https://console.firebase.google.com\"),\n  deployOrigin: utils.envOverride(\"FIREBASE_DEPLOY_URL\", utils.envOverride(\"FIREBASE_UPLOAD_URL\", \"https://deploy.firebase.com\")),\n  dynamicLinksOrigin: utils.envOverride(\"FIREBASE_DYNAMIC_LINKS_URL\", \"https://firebasedynamiclinks.googleapis.com\"),\n  dynamicLinksKey: utils.envOverride(\"FIREBASE_DYNAMIC_LINKS_KEY\", \"AIzaSyB6PtY5vuiSB8MNgt20mQffkOlunZnHYiQ\"),\n  firebaseApiOrigin: utils.envOverride(\"FIREBASE_API_URL\", \"https://firebase.googleapis.com\"),\n  firebaseExtensionsRegistryOrigin: utils.envOverride(\"FIREBASE_EXT_REGISTRY_ORIGIN\", \"https://extensions-registry.firebaseapp.com\"),\n  firedataOrigin: utils.envOverride(\"FIREBASE_FIREDATA_URL\", \"https://mobilesdk-pa.googleapis.com\"),\n  firestoreOriginOrEmulator: utils.envOverride(Constants.FIRESTORE_EMULATOR_HOST, utils.envOverride(\"FIRESTORE_URL\", \"https://firestore.googleapis.com\"), val => {\n    if (val.startsWith(\"http\")) {\n      return val;\n    }\n\n    return `http://${val}`;\n  }),\n  firestoreOrigin: utils.envOverride(\"FIRESTORE_URL\", \"https://firestore.googleapis.com\"),\n  functionsOrigin: utils.envOverride(\"FIREBASE_FUNCTIONS_URL\", \"https://cloudfunctions.googleapis.com\"),\n  functionsV2Origin: utils.envOverride(\"FIREBASE_FUNCTIONS_V2_URL\", \"https://cloudfunctions.googleapis.com\"),\n  runOrigin: utils.envOverride(\"CLOUD_RUN_URL\", \"https://run.googleapis.com\"),\n  functionsDefaultRegion: utils.envOverride(\"FIREBASE_FUNCTIONS_DEFAULT_REGION\", \"us-central1\"),\n  cloudschedulerOrigin: utils.envOverride(\"FIREBASE_CLOUDSCHEDULER_URL\", \"https://cloudscheduler.googleapis.com\"),\n  cloudTasksOrigin: utils.envOverride(\"FIREBASE_CLOUD_TAKS_URL\", \"https://cloudtasks.googleapis.com\"),\n  pubsubOrigin: utils.envOverride(\"FIREBASE_PUBSUB_URL\", \"https://pubsub.googleapis.com\"),\n  googleOrigin: utils.envOverride(\"FIREBASE_TOKEN_URL\", utils.envOverride(\"FIREBASE_GOOGLE_URL\", \"https://www.googleapis.com\")),\n  hostingOrigin: utils.envOverride(\"FIREBASE_HOSTING_URL\", \"https://web.app\"),\n  identityOrigin: utils.envOverride(\"FIREBASE_IDENTITY_URL\", \"https://identitytoolkit.googleapis.com\"),\n  iamOrigin: utils.envOverride(\"FIREBASE_IAM_URL\", \"https://iam.googleapis.com\"),\n  extensionsOrigin: utils.envOverride(\"FIREBASE_EXT_URL\", \"https://firebaseextensions.googleapis.com\"),\n  realtimeOrigin: utils.envOverride(\"FIREBASE_REALTIME_URL\", \"https://firebaseio.com\"),\n  rtdbManagementOrigin: utils.envOverride(\"FIREBASE_RTDB_MANAGEMENT_URL\", \"https://firebasedatabase.googleapis.com\"),\n  rtdbMetadataOrigin: utils.envOverride(\"FIREBASE_RTDB_METADATA_URL\", \"https://metadata-dot-firebase-prod.appspot.com\"),\n  remoteConfigApiOrigin: utils.envOverride(\"FIREBASE_REMOTE_CONFIG_URL\", \"https://firebaseremoteconfig.googleapis.com\"),\n  resourceManagerOrigin: utils.envOverride(\"FIREBASE_RESOURCEMANAGER_URL\", \"https://cloudresourcemanager.googleapis.com\"),\n  rulesOrigin: utils.envOverride(\"FIREBASE_RULES_URL\", \"https://firebaserules.googleapis.com\"),\n  runtimeconfigOrigin: utils.envOverride(\"FIREBASE_RUNTIMECONFIG_URL\", \"https://runtimeconfig.googleapis.com\"),\n  storageOrigin: utils.envOverride(\"FIREBASE_STORAGE_URL\", \"https://storage.googleapis.com\"),\n  firebaseStorageOrigin: utils.envOverride(\"FIREBASE_FIREBASESTORAGE_URL\", \"https://firebasestorage.googleapis.com\"),\n  hostingApiOrigin: utils.envOverride(\"FIREBASE_HOSTING_API_URL\", \"https://firebasehosting.googleapis.com\"),\n  cloudRunApiOrigin: utils.envOverride(\"CLOUD_RUN_API_URL\", \"https://run.googleapis.com\"),\n  serviceUsageOrigin: utils.envOverride(\"FIREBASE_SERVICE_USAGE_URL\", \"https://serviceusage.googleapis.com\"),\n  githubOrigin: utils.envOverride(\"GITHUB_URL\", \"https://github.com\"),\n  githubApiOrigin: utils.envOverride(\"GITHUB_API_URL\", \"https://api.github.com\"),\n  secretManagerOrigin: utils.envOverride(\"CLOUD_SECRET_MANAGER_URL\", \"https://secretmanager.googleapis.com\"),\n  githubClientId: utils.envOverride(\"GITHUB_CLIENT_ID\", \"89cf50f02ac6aaed3484\"),\n  githubClientSecret: utils.envOverride(\"GITHUB_CLIENT_SECRET\", \"3330d14abc895d9a74d5f17cd7a00711fa2c5bf0\"),\n  setRefreshToken: function (token) {\n    refreshToken = token;\n  },\n  setAccessToken: function (token) {\n    accessToken = token;\n  },\n  getScopes: function () {\n    return commandScopes;\n  },\n  setScopes: function (s) {\n    commandScopes = _.uniq(_.flatten([scopes.EMAIL, scopes.OPENID, scopes.CLOUD_PROJECTS_READONLY, scopes.FIREBASE_PLATFORM].concat(s || [])));\n    logger.debug(\"> command requires scopes:\", JSON.stringify(commandScopes));\n  },\n  getAccessToken: function () {\n    return accessToken ? Promise.resolve({\n      access_token: accessToken\n    }) : require(\"./auth\").getAccessToken(refreshToken, commandScopes);\n  },\n  addRequestHeaders: function (reqOptions, options) {\n    _.set(reqOptions, [\"headers\", \"User-Agent\"], \"FirebaseCLI/\" + CLI_VERSION);\n\n    _.set(reqOptions, [\"headers\", \"X-Client-Version\"], \"FirebaseCLI/\" + CLI_VERSION);\n\n    var secureRequest = true;\n\n    if (options && options.origin) {\n      const originUrl = url.parse(options.origin);\n      secureRequest = originUrl.protocol === \"https:\";\n    }\n\n    var getTokenPromise = secureRequest ? api.getAccessToken() : Promise.resolve({\n      access_token: \"owner\"\n    });\n    return getTokenPromise.then(function (result) {\n      _.set(reqOptions, \"headers.authorization\", \"Bearer \" + result.access_token);\n\n      return reqOptions;\n    });\n  },\n  request: function (method, resource, options) {\n    options = _.extend({\n      data: {},\n      resolveOnHTTPError: false,\n      json: true\n    }, options);\n\n    if (!options.origin) {\n      throw new FirebaseError(\"Cannot make request without an origin\", {\n        exit: 2\n      });\n    }\n\n    var validMethods = [\"GET\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"];\n\n    if (validMethods.indexOf(method) < 0) {\n      method = \"GET\";\n    }\n\n    var reqOptions = {\n      method: method\n    };\n\n    if (options.query) {\n      resource = _appendQueryData(resource, options.query);\n    }\n\n    if (method === \"GET\") {\n      resource = _appendQueryData(resource, options.data);\n    } else {\n      if (_.size(options.data) > 0) {\n        reqOptions.body = options.data;\n      } else if (_.size(options.form) > 0) {\n        reqOptions.form = options.form;\n      }\n    }\n\n    reqOptions.url = options.origin + resource;\n    reqOptions.files = options.files;\n    reqOptions.resolveOnHTTPError = options.resolveOnHTTPError;\n    reqOptions.json = options.json;\n    reqOptions.qs = options.qs;\n    reqOptions.headers = options.headers;\n    reqOptions.timeout = options.timeout;\n\n    var requestFunction = function () {\n      return _request(reqOptions, options.logOptions);\n    };\n\n    if (options.auth === true) {\n      requestFunction = function () {\n        return api.addRequestHeaders(reqOptions, options).then(function (reqOptionsWithToken) {\n          return _request(reqOptionsWithToken, options.logOptions);\n        });\n      };\n    }\n\n    return requestFunction().catch(function (err) {\n      if (options.retryCodes && _.includes(options.retryCodes, _.get(err, \"context.response.statusCode\"))) {\n        return new Promise(function (resolve) {\n          setTimeout(resolve, 1000);\n        }).then(requestFunction);\n      }\n\n      return Promise.reject(err);\n    });\n  }\n};\nmodule.exports = api;","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Desktop/React/netflix-clone/node_modules/firebase-tools/lib/api.js"],"names":["_","require","querystring","request","url","Constants","FirebaseError","logger","responseToError","scopes","utils","CLI_VERSION","version","accessToken","refreshToken","commandScopes","_request","options","logOptions","qsLog","bodyLog","qs","skipQueryParams","JSON","stringify","skipRequestBody","body","form","debug","method","headers","Promise","resolve","reject","req","err","response","message","original","exit","statusCode","skipResponseBody","resolveOnHTTPError","status","size","files","forEach","details","param","append","stream","knownLength","filename","contentType","_appendQueryData","path","data","includes","api","authProxyOrigin","envOverride","clientId","clientSecret","cloudbillingOrigin","cloudloggingOrigin","cloudMonitoringOrigin","containerRegistryDomain","artifactRegistryDomain","appDistributionOrigin","appengineOrigin","authOrigin","consoleOrigin","deployOrigin","dynamicLinksOrigin","dynamicLinksKey","firebaseApiOrigin","firebaseExtensionsRegistryOrigin","firedataOrigin","firestoreOriginOrEmulator","FIRESTORE_EMULATOR_HOST","val","startsWith","firestoreOrigin","functionsOrigin","functionsV2Origin","runOrigin","functionsDefaultRegion","cloudschedulerOrigin","cloudTasksOrigin","pubsubOrigin","googleOrigin","hostingOrigin","identityOrigin","iamOrigin","extensionsOrigin","realtimeOrigin","rtdbManagementOrigin","rtdbMetadataOrigin","remoteConfigApiOrigin","resourceManagerOrigin","rulesOrigin","runtimeconfigOrigin","storageOrigin","firebaseStorageOrigin","hostingApiOrigin","cloudRunApiOrigin","serviceUsageOrigin","githubOrigin","githubApiOrigin","secretManagerOrigin","githubClientId","githubClientSecret","setRefreshToken","token","setAccessToken","getScopes","setScopes","s","uniq","flatten","EMAIL","OPENID","CLOUD_PROJECTS_READONLY","FIREBASE_PLATFORM","concat","getAccessToken","access_token","addRequestHeaders","reqOptions","set","secureRequest","origin","originUrl","parse","protocol","getTokenPromise","then","result","resource","extend","json","validMethods","indexOf","query","timeout","requestFunction","auth","reqOptionsWithToken","catch","retryCodes","get","setTimeout","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nvar _ = require(\"lodash\");\nvar querystring = require(\"querystring\");\nvar request = require(\"request\");\nvar url = require(\"url\");\nvar { Constants } = require(\"./emulator/constants\");\nvar { FirebaseError } = require(\"./error\");\nconst { logger } = require(\"./logger\");\nvar responseToError = require(\"./responseToError\");\nvar scopes = require(\"./scopes\");\nvar utils = require(\"./utils\");\nvar CLI_VERSION = require(\"../package.json\").version;\nvar accessToken;\nvar refreshToken;\nvar commandScopes;\nvar _request = function (options, logOptions) {\n    logOptions = logOptions || {};\n    var qsLog = \"\";\n    var bodyLog = \"<request body omitted>\";\n    if (options.qs && !logOptions.skipQueryParams) {\n        qsLog = JSON.stringify(options.qs);\n    }\n    if (!logOptions.skipRequestBody) {\n        bodyLog = options.body || options.form || \"\";\n    }\n    logger.debug(\">>> HTTP REQUEST\", options.method, options.url, qsLog, \"\\n\", bodyLog);\n    options.headers = options.headers || {};\n    options.headers[\"connection\"] = \"keep-alive\";\n    return new Promise(function (resolve, reject) {\n        var req = request(options, function (err, response, body) {\n            if (err) {\n                return reject(new FirebaseError(\"Server Error. \" + err.message, {\n                    original: err,\n                    exit: 2,\n                }));\n            }\n            logger.debug(\"<<< HTTP RESPONSE\", response.statusCode, response.headers);\n            if (response.statusCode >= 400 && !logOptions.skipResponseBody) {\n                logger.debug(\"<<< HTTP RESPONSE BODY\", response.body);\n                if (!options.resolveOnHTTPError) {\n                    return reject(responseToError(response, body));\n                }\n            }\n            return resolve({\n                status: response.statusCode,\n                response: response,\n                body: body,\n            });\n        });\n        if (_.size(options.files) > 0) {\n            var form = req.form();\n            _.forEach(options.files, function (details, param) {\n                form.append(param, details.stream, {\n                    knownLength: details.knownLength,\n                    filename: details.filename,\n                    contentType: details.contentType,\n                });\n            });\n        }\n    });\n};\nvar _appendQueryData = function (path, data) {\n    if (data && _.size(data) > 0) {\n        path += _.includes(path, \"?\") ? \"&\" : \"?\";\n        path += querystring.stringify(data);\n    }\n    return path;\n};\nvar api = {\n    authProxyOrigin: utils.envOverride(\"FIREBASE_AUTHPROXY_URL\", \"https://auth.firebase.tools\"),\n    clientId: utils.envOverride(\"FIREBASE_CLIENT_ID\", \"563584335869-fgrhgmd47bqnekij5i8b5pr03ho849e6.apps.googleusercontent.com\"),\n    clientSecret: utils.envOverride(\"FIREBASE_CLIENT_SECRET\", \"j9iVZfS8kkCEFUPaAeJV0sAi\"),\n    cloudbillingOrigin: utils.envOverride(\"FIREBASE_CLOUDBILLING_URL\", \"https://cloudbilling.googleapis.com\"),\n    cloudloggingOrigin: utils.envOverride(\"FIREBASE_CLOUDLOGGING_URL\", \"https://logging.googleapis.com\"),\n    cloudMonitoringOrigin: utils.envOverride(\"CLOUD_MONITORING_URL\", \"https://monitoring.googleapis.com\"),\n    containerRegistryDomain: utils.envOverride(\"CONTAINER_REGISTRY_DOMAIN\", \"gcr.io\"),\n    artifactRegistryDomain: utils.envOverride(\"ARTIFACT_REGISTRY_DOMAIN\", \"https://artifactregistry.googleapis.com\"),\n    appDistributionOrigin: utils.envOverride(\"FIREBASE_APP_DISTRIBUTION_URL\", \"https://firebaseappdistribution.googleapis.com\"),\n    appengineOrigin: utils.envOverride(\"FIREBASE_APPENGINE_URL\", \"https://appengine.googleapis.com\"),\n    authOrigin: utils.envOverride(\"FIREBASE_AUTH_URL\", \"https://accounts.google.com\"),\n    consoleOrigin: utils.envOverride(\"FIREBASE_CONSOLE_URL\", \"https://console.firebase.google.com\"),\n    deployOrigin: utils.envOverride(\"FIREBASE_DEPLOY_URL\", utils.envOverride(\"FIREBASE_UPLOAD_URL\", \"https://deploy.firebase.com\")),\n    dynamicLinksOrigin: utils.envOverride(\"FIREBASE_DYNAMIC_LINKS_URL\", \"https://firebasedynamiclinks.googleapis.com\"),\n    dynamicLinksKey: utils.envOverride(\"FIREBASE_DYNAMIC_LINKS_KEY\", \"AIzaSyB6PtY5vuiSB8MNgt20mQffkOlunZnHYiQ\"),\n    firebaseApiOrigin: utils.envOverride(\"FIREBASE_API_URL\", \"https://firebase.googleapis.com\"),\n    firebaseExtensionsRegistryOrigin: utils.envOverride(\"FIREBASE_EXT_REGISTRY_ORIGIN\", \"https://extensions-registry.firebaseapp.com\"),\n    firedataOrigin: utils.envOverride(\"FIREBASE_FIREDATA_URL\", \"https://mobilesdk-pa.googleapis.com\"),\n    firestoreOriginOrEmulator: utils.envOverride(Constants.FIRESTORE_EMULATOR_HOST, utils.envOverride(\"FIRESTORE_URL\", \"https://firestore.googleapis.com\"), (val) => {\n        if (val.startsWith(\"http\")) {\n            return val;\n        }\n        return `http://${val}`;\n    }),\n    firestoreOrigin: utils.envOverride(\"FIRESTORE_URL\", \"https://firestore.googleapis.com\"),\n    functionsOrigin: utils.envOverride(\"FIREBASE_FUNCTIONS_URL\", \"https://cloudfunctions.googleapis.com\"),\n    functionsV2Origin: utils.envOverride(\"FIREBASE_FUNCTIONS_V2_URL\", \"https://cloudfunctions.googleapis.com\"),\n    runOrigin: utils.envOverride(\"CLOUD_RUN_URL\", \"https://run.googleapis.com\"),\n    functionsDefaultRegion: utils.envOverride(\"FIREBASE_FUNCTIONS_DEFAULT_REGION\", \"us-central1\"),\n    cloudschedulerOrigin: utils.envOverride(\"FIREBASE_CLOUDSCHEDULER_URL\", \"https://cloudscheduler.googleapis.com\"),\n    cloudTasksOrigin: utils.envOverride(\"FIREBASE_CLOUD_TAKS_URL\", \"https://cloudtasks.googleapis.com\"),\n    pubsubOrigin: utils.envOverride(\"FIREBASE_PUBSUB_URL\", \"https://pubsub.googleapis.com\"),\n    googleOrigin: utils.envOverride(\"FIREBASE_TOKEN_URL\", utils.envOverride(\"FIREBASE_GOOGLE_URL\", \"https://www.googleapis.com\")),\n    hostingOrigin: utils.envOverride(\"FIREBASE_HOSTING_URL\", \"https://web.app\"),\n    identityOrigin: utils.envOverride(\"FIREBASE_IDENTITY_URL\", \"https://identitytoolkit.googleapis.com\"),\n    iamOrigin: utils.envOverride(\"FIREBASE_IAM_URL\", \"https://iam.googleapis.com\"),\n    extensionsOrigin: utils.envOverride(\"FIREBASE_EXT_URL\", \"https://firebaseextensions.googleapis.com\"),\n    realtimeOrigin: utils.envOverride(\"FIREBASE_REALTIME_URL\", \"https://firebaseio.com\"),\n    rtdbManagementOrigin: utils.envOverride(\"FIREBASE_RTDB_MANAGEMENT_URL\", \"https://firebasedatabase.googleapis.com\"),\n    rtdbMetadataOrigin: utils.envOverride(\"FIREBASE_RTDB_METADATA_URL\", \"https://metadata-dot-firebase-prod.appspot.com\"),\n    remoteConfigApiOrigin: utils.envOverride(\"FIREBASE_REMOTE_CONFIG_URL\", \"https://firebaseremoteconfig.googleapis.com\"),\n    resourceManagerOrigin: utils.envOverride(\"FIREBASE_RESOURCEMANAGER_URL\", \"https://cloudresourcemanager.googleapis.com\"),\n    rulesOrigin: utils.envOverride(\"FIREBASE_RULES_URL\", \"https://firebaserules.googleapis.com\"),\n    runtimeconfigOrigin: utils.envOverride(\"FIREBASE_RUNTIMECONFIG_URL\", \"https://runtimeconfig.googleapis.com\"),\n    storageOrigin: utils.envOverride(\"FIREBASE_STORAGE_URL\", \"https://storage.googleapis.com\"),\n    firebaseStorageOrigin: utils.envOverride(\"FIREBASE_FIREBASESTORAGE_URL\", \"https://firebasestorage.googleapis.com\"),\n    hostingApiOrigin: utils.envOverride(\"FIREBASE_HOSTING_API_URL\", \"https://firebasehosting.googleapis.com\"),\n    cloudRunApiOrigin: utils.envOverride(\"CLOUD_RUN_API_URL\", \"https://run.googleapis.com\"),\n    serviceUsageOrigin: utils.envOverride(\"FIREBASE_SERVICE_USAGE_URL\", \"https://serviceusage.googleapis.com\"),\n    githubOrigin: utils.envOverride(\"GITHUB_URL\", \"https://github.com\"),\n    githubApiOrigin: utils.envOverride(\"GITHUB_API_URL\", \"https://api.github.com\"),\n    secretManagerOrigin: utils.envOverride(\"CLOUD_SECRET_MANAGER_URL\", \"https://secretmanager.googleapis.com\"),\n    githubClientId: utils.envOverride(\"GITHUB_CLIENT_ID\", \"89cf50f02ac6aaed3484\"),\n    githubClientSecret: utils.envOverride(\"GITHUB_CLIENT_SECRET\", \"3330d14abc895d9a74d5f17cd7a00711fa2c5bf0\"),\n    setRefreshToken: function (token) {\n        refreshToken = token;\n    },\n    setAccessToken: function (token) {\n        accessToken = token;\n    },\n    getScopes: function () {\n        return commandScopes;\n    },\n    setScopes: function (s) {\n        commandScopes = _.uniq(_.flatten([\n            scopes.EMAIL,\n            scopes.OPENID,\n            scopes.CLOUD_PROJECTS_READONLY,\n            scopes.FIREBASE_PLATFORM,\n        ].concat(s || [])));\n        logger.debug(\"> command requires scopes:\", JSON.stringify(commandScopes));\n    },\n    getAccessToken: function () {\n        return accessToken\n            ? Promise.resolve({ access_token: accessToken })\n            : require(\"./auth\").getAccessToken(refreshToken, commandScopes);\n    },\n    addRequestHeaders: function (reqOptions, options) {\n        _.set(reqOptions, [\"headers\", \"User-Agent\"], \"FirebaseCLI/\" + CLI_VERSION);\n        _.set(reqOptions, [\"headers\", \"X-Client-Version\"], \"FirebaseCLI/\" + CLI_VERSION);\n        var secureRequest = true;\n        if (options && options.origin) {\n            const originUrl = url.parse(options.origin);\n            secureRequest = originUrl.protocol === \"https:\";\n        }\n        var getTokenPromise = secureRequest\n            ? api.getAccessToken()\n            : Promise.resolve({ access_token: \"owner\" });\n        return getTokenPromise.then(function (result) {\n            _.set(reqOptions, \"headers.authorization\", \"Bearer \" + result.access_token);\n            return reqOptions;\n        });\n    },\n    request: function (method, resource, options) {\n        options = _.extend({\n            data: {},\n            resolveOnHTTPError: false,\n            json: true,\n        }, options);\n        if (!options.origin) {\n            throw new FirebaseError(\"Cannot make request without an origin\", { exit: 2 });\n        }\n        var validMethods = [\"GET\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"];\n        if (validMethods.indexOf(method) < 0) {\n            method = \"GET\";\n        }\n        var reqOptions = {\n            method: method,\n        };\n        if (options.query) {\n            resource = _appendQueryData(resource, options.query);\n        }\n        if (method === \"GET\") {\n            resource = _appendQueryData(resource, options.data);\n        }\n        else {\n            if (_.size(options.data) > 0) {\n                reqOptions.body = options.data;\n            }\n            else if (_.size(options.form) > 0) {\n                reqOptions.form = options.form;\n            }\n        }\n        reqOptions.url = options.origin + resource;\n        reqOptions.files = options.files;\n        reqOptions.resolveOnHTTPError = options.resolveOnHTTPError;\n        reqOptions.json = options.json;\n        reqOptions.qs = options.qs;\n        reqOptions.headers = options.headers;\n        reqOptions.timeout = options.timeout;\n        var requestFunction = function () {\n            return _request(reqOptions, options.logOptions);\n        };\n        if (options.auth === true) {\n            requestFunction = function () {\n                return api.addRequestHeaders(reqOptions, options).then(function (reqOptionsWithToken) {\n                    return _request(reqOptionsWithToken, options.logOptions);\n                });\n            };\n        }\n        return requestFunction().catch(function (err) {\n            if (options.retryCodes &&\n                _.includes(options.retryCodes, _.get(err, \"context.response.statusCode\"))) {\n                return new Promise(function (resolve) {\n                    setTimeout(resolve, 1000);\n                }).then(requestFunction);\n            }\n            return Promise.reject(err);\n        });\n    },\n};\nmodule.exports = api;\n"]},"metadata":{},"sourceType":"script"}