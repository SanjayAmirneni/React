{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\React\\\\netflix-clone\\\\src\\\\Components\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport { keyboard } from \"@testing-library/user-event/dist/keyboard\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"./Request/axios\";\nimport \"./Row.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst img_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row(props) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = axios.get(props.request);\n      setMovies((await request).data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [props.request]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: movies.map((ele, index) => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img_row\",\n          src: `${img_url}${props.large ? ele.poster_path : ele.backdrop_path}`,\n          alt: ele.name\n        }, ele.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"+jZiGaK1IrFkDFSplSYv9W7La4s=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Desktop/React/netflix-clone/src/Components/Row.js"],"names":["keyboard","React","useEffect","useState","axios","img_url","Row","props","movies","setMovies","fetchData","request","get","data","results","title","map","ele","index","large","poster_path","backdrop_path","name","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,2CAAzB;AACA,OAAOC,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,WAAP;;AAGA,MAAMC,OAAO,GAAC,sCAAd;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAmB;AAAA;;AAGf,QAAK,CAACC,MAAD,EAAQC,SAAR,IAAqBN,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACX,mBAAeQ,SAAf,GAA0B;AACtB,YAAMC,OAAO,GAAGP,KAAK,CAACQ,GAAN,CAAUL,KAAK,CAACI,OAAhB,CAAhB;AACAF,MAAAA,SAAS,CAAC,CAAC,MAAME,OAAP,EAAgBE,IAAhB,CAAqBC,OAAtB,CAAT;AACA,aAAOH,OAAP;AACH;;AACDD,IAAAA,SAAS;AACP,GAPI,EAOH,CAACH,KAAK,CAACI,OAAP,CAPG,CAAT;AAQA,sBACA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,gBAAuBJ,KAAK,CAACQ;AAA7B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA,gBACKP,MAAM,CAACQ,GAAP,CAAW,CAACC,GAAD,EAAKC,KAAL,KAAa;AACrB,4BAAO;AAAkB,UAAA,SAAS,EAAC,SAA5B;AAAsC,UAAA,GAAG,EAAG,GAAEb,OAAQ,GAAEE,KAAK,CAACY,KAAN,GAAYF,GAAG,CAACG,WAAhB,GAA4BH,GAAG,CAACI,aAAc,EAAtG;AAAyG,UAAA,GAAG,EAAEJ,GAAG,CAACK;AAAlH,WAAUL,GAAG,CAACM,EAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAUH;;GAvBQjB,G;;KAAAA,G;AAyBT,eAAeA,GAAf","sourcesContent":["import { keyboard } from \"@testing-library/user-event/dist/keyboard\";\r\nimport React,{useEffect,useState} from \"react\";\r\nimport axios from \"./Request/axios\";\r\nimport \"./Row.css\";\r\n\r\n\r\nconst img_url=\"https://image.tmdb.org/t/p/original/\"\r\n\r\n\r\nfunction Row(props){\r\n\r\n\r\n    const[movies,setMovies] = useState([]);\r\n\r\n    useEffect(()=>{\r\n       async function fetchData(){\r\n           const request = axios.get(props.request)\r\n           setMovies((await request).data.results);\r\n           return request;\r\n       }\r\n       fetchData();\r\n        },[props.request]);\r\n    return(\r\n    <div className=\"row_container\">\r\n        <h2 className=\"title\">{props.title}</h2>\r\n        <div  className=\"row\">\r\n            {movies.map((ele,index)=>{\r\n                return <img key={ele.id} className=\"img_row\" src={`${img_url}${props.large?ele.poster_path:ele.backdrop_path}`} alt={ele.name} />\r\n            })}\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Row;\r\n\r\n"]},"metadata":{},"sourceType":"module"}