{"ast":null,"code":"// ES2015 Symbol polyfill for environments that do not (or partially) support it\n'use strict';\n\nvar d = require('d'),\n    validateSymbol = require('./validate-symbol'),\n    create = Object.create,\n    defineProperties = Object.defineProperties,\n    defineProperty = Object.defineProperty,\n    objPrototype = Object.prototype,\n    NativeSymbol,\n    SymbolPolyfill,\n    HiddenSymbol,\n    globalSymbols = create(null),\n    isNativeSafe;\n\nif (typeof Symbol === 'function') {\n  NativeSymbol = Symbol;\n\n  try {\n    String(NativeSymbol());\n    isNativeSafe = true;\n  } catch (ignore) {}\n}\n\nvar generateName = function () {\n  var created = create(null);\n  return function (desc) {\n    var postfix = 0,\n        name,\n        ie11BugWorkaround;\n\n    while (created[desc + (postfix || '')]) ++postfix;\n\n    desc += postfix || '';\n    created[desc] = true;\n    name = '@@' + desc;\n    defineProperty(objPrototype, name, d.gs(null, function (value) {\n      // For IE11 issue see:\n      // https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n      //    ie11-broken-getters-on-dom-objects\n      // https://github.com/medikoo/es6-symbol/issues/12\n      if (ie11BugWorkaround) return;\n      ie11BugWorkaround = true;\n      defineProperty(this, name, d(value));\n      ie11BugWorkaround = false;\n    }));\n    return name;\n  };\n}(); // Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\n\n\nHiddenSymbol = function Symbol(description) {\n  if (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');\n  return SymbolPolyfill(description);\n}; // Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\n\n\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n  var symbol;\n  if (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');\n  if (isNativeSafe) return NativeSymbol(description);\n  symbol = create(HiddenSymbol.prototype);\n  description = description === undefined ? '' : String(description);\n  return defineProperties(symbol, {\n    __description__: d('', description),\n    __name__: d('', generateName(description))\n  });\n};\n\ndefineProperties(SymbolPolyfill, {\n  for: d(function (key) {\n    if (globalSymbols[key]) return globalSymbols[key];\n    return globalSymbols[key] = SymbolPolyfill(String(key));\n  }),\n  keyFor: d(function (s) {\n    var key;\n    validateSymbol(s);\n\n    for (key in globalSymbols) if (globalSymbols[key] === s) return key;\n  }),\n  // To ensure proper interoperability with other native functions (e.g. Array.from)\n  // fallback to eventual native implementation of given symbol\n  hasInstance: d('', NativeSymbol && NativeSymbol.hasInstance || SymbolPolyfill('hasInstance')),\n  isConcatSpreadable: d('', NativeSymbol && NativeSymbol.isConcatSpreadable || SymbolPolyfill('isConcatSpreadable')),\n  iterator: d('', NativeSymbol && NativeSymbol.iterator || SymbolPolyfill('iterator')),\n  match: d('', NativeSymbol && NativeSymbol.match || SymbolPolyfill('match')),\n  replace: d('', NativeSymbol && NativeSymbol.replace || SymbolPolyfill('replace')),\n  search: d('', NativeSymbol && NativeSymbol.search || SymbolPolyfill('search')),\n  species: d('', NativeSymbol && NativeSymbol.species || SymbolPolyfill('species')),\n  split: d('', NativeSymbol && NativeSymbol.split || SymbolPolyfill('split')),\n  toPrimitive: d('', NativeSymbol && NativeSymbol.toPrimitive || SymbolPolyfill('toPrimitive')),\n  toStringTag: d('', NativeSymbol && NativeSymbol.toStringTag || SymbolPolyfill('toStringTag')),\n  unscopables: d('', NativeSymbol && NativeSymbol.unscopables || SymbolPolyfill('unscopables'))\n}); // Internal tweaks for real symbol producer\n\ndefineProperties(HiddenSymbol.prototype, {\n  constructor: d(SymbolPolyfill),\n  toString: d('', function () {\n    return this.__name__;\n  })\n}); // Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\n\ndefineProperties(SymbolPolyfill.prototype, {\n  toString: d(function () {\n    return 'Symbol (' + validateSymbol(this).__description__ + ')';\n  }),\n  valueOf: d(function () {\n    return validateSymbol(this);\n  })\n});\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {\n  var symbol = validateSymbol(this);\n  if (typeof symbol === 'symbol') return symbol;\n  return symbol.toString();\n}));\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol')); // Proper implementaton of toPrimitive and toStringTag for returned symbol instances\n\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag, d('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])); // Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\n\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive, d('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Desktop/React/netflix-clone/node_modules/firebase-tools/node_modules/es6-symbol/polyfill.js"],"names":["d","require","validateSymbol","create","Object","defineProperties","defineProperty","objPrototype","prototype","NativeSymbol","SymbolPolyfill","HiddenSymbol","globalSymbols","isNativeSafe","Symbol","String","ignore","generateName","created","desc","postfix","name","ie11BugWorkaround","gs","value","description","TypeError","module","exports","symbol","undefined","__description__","__name__","for","key","keyFor","s","hasInstance","isConcatSpreadable","iterator","match","replace","search","species","split","toPrimitive","toStringTag","unscopables","constructor","toString","valueOf"],"mappings":"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","sourcesContent":["// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n'use strict';\n\nvar d              = require('d')\n  , validateSymbol = require('./validate-symbol')\n\n  , create = Object.create, defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty, objPrototype = Object.prototype\n  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)\n  , isNativeSafe;\n\nif (typeof Symbol === 'function') {\n\tNativeSymbol = Symbol;\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n}\n\nvar generateName = (function () {\n\tvar created = create(null);\n\treturn function (desc) {\n\t\tvar postfix = 0, name, ie11BugWorkaround;\n\t\twhile (created[desc + (postfix || '')]) ++postfix;\n\t\tdesc += (postfix || '');\n\t\tcreated[desc] = true;\n\t\tname = '@@' + desc;\n\t\tdefineProperty(objPrototype, name, d.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t}));\n\t\treturn name;\n\t};\n}());\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = (description === undefined ? '' : String(description));\n\treturn defineProperties(symbol, {\n\t\t__description__: d('', description),\n\t\t__name__: d('', generateName(description))\n\t});\n};\ndefineProperties(SymbolPolyfill, {\n\tfor: d(function (key) {\n\t\tif (globalSymbols[key]) return globalSymbols[key];\n\t\treturn (globalSymbols[key] = SymbolPolyfill(String(key)));\n\t}),\n\tkeyFor: d(function (s) {\n\t\tvar key;\n\t\tvalidateSymbol(s);\n\t\tfor (key in globalSymbols) if (globalSymbols[key] === s) return key;\n\t}),\n\n\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t// fallback to eventual native implementation of given symbol\n\thasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),\n\tisConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\tSymbolPolyfill('isConcatSpreadable')),\n\titerator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),\n\tmatch: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),\n\treplace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),\n\tsearch: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),\n\tspecies: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),\n\tsplit: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),\n\ttoPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),\n\ttoStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),\n\tunscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))\n});\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d('', function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {\n\tvar symbol = validateSymbol(this);\n\tif (typeof symbol === 'symbol') return symbol;\n\treturn symbol.toString();\n}));\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));\n"]},"metadata":{},"sourceType":"script"}