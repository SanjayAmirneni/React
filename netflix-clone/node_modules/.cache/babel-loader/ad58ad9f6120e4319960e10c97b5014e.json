{"ast":null,"code":"'use strict';\n\nconst chalk = require('chalk');\n\nconst figures = require('figures');\n/**\n * Separator object\n * Used to space/separate choices group\n * @constructor\n * @param {String} line   Separation line content (facultative)\n */\n\n\nclass Separator {\n  constructor(line) {\n    this.type = 'separator';\n    this.line = chalk.dim(line || new Array(15).join(figures.line));\n  }\n  /**\n   * Stringify separator\n   * @return {String} the separator display string\n   */\n\n\n  toString() {\n    return this.line;\n  }\n\n}\n/**\n * Helper function returning false if object is a separator\n * @param  {Object} obj object to test against\n * @return {Boolean}    `false` if object is a separator\n */\n\n\nSeparator.exclude = function (obj) {\n  return obj.type !== 'separator';\n};\n\nmodule.exports = Separator;","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Desktop/React/netflix-clone/node_modules/firebase-tools/node_modules/inquirer/lib/objects/separator.js"],"names":["chalk","require","figures","Separator","constructor","line","type","dim","Array","join","toString","exclude","obj","module","exports"],"mappings":"AAAA;;AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAME,SAAN,CAAgB;AACdC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,SAAKC,IAAL,GAAY,WAAZ;AACA,SAAKD,IAAL,GAAYL,KAAK,CAACO,GAAN,CAAUF,IAAI,IAAI,IAAIG,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmBP,OAAO,CAACG,IAA3B,CAAlB,CAAZ;AACD;AAED;AACF;AACA;AACA;;;AACEK,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKL,IAAZ;AACD;;AAZa;AAehB;AACA;AACA;AACA;AACA;;;AAEAF,SAAS,CAACQ,OAAV,GAAoB,UAAUC,GAAV,EAAe;AACjC,SAAOA,GAAG,CAACN,IAAJ,KAAa,WAApB;AACD,CAFD;;AAIAO,MAAM,CAACC,OAAP,GAAiBX,SAAjB","sourcesContent":["'use strict';\nconst chalk = require('chalk');\nconst figures = require('figures');\n\n/**\n * Separator object\n * Used to space/separate choices group\n * @constructor\n * @param {String} line   Separation line content (facultative)\n */\n\nclass Separator {\n  constructor(line) {\n    this.type = 'separator';\n    this.line = chalk.dim(line || new Array(15).join(figures.line));\n  }\n\n  /**\n   * Stringify separator\n   * @return {String} the separator display string\n   */\n  toString() {\n    return this.line;\n  }\n}\n\n/**\n * Helper function returning false if object is a separator\n * @param  {Object} obj object to test against\n * @return {Boolean}    `false` if object is a separator\n */\n\nSeparator.exclude = function (obj) {\n  return obj.type !== 'separator';\n};\n\nmodule.exports = Separator;\n"]},"metadata":{},"sourceType":"script"}