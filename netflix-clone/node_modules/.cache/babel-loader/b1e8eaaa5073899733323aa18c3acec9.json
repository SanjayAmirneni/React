{"ast":null,"code":"'use strict';\n\nconst _ = {\n  isString: require('lodash/isString'),\n  isNumber: require('lodash/isNumber'),\n  extend: require('lodash/extend'),\n  isFunction: require('lodash/isFunction')\n};\n/**\n * Choice object\n * Normalize input as choice object\n * @constructor\n * @param {Number|String|Object} val  Choice value. If an object is passed, it should contains\n *                                    at least one of `value` or `name` property\n */\n\nmodule.exports = class Choice {\n  constructor(val, answers) {\n    // Don't process Choice and Separator object\n    if (val instanceof Choice || val.type === 'separator') {\n      // eslint-disable-next-line no-constructor-return\n      return val;\n    }\n\n    if (_.isString(val) || _.isNumber(val)) {\n      this.name = String(val);\n      this.value = val;\n      this.short = String(val);\n    } else {\n      _.extend(this, val, {\n        name: val.name || val.value,\n        value: 'value' in val ? val.value : val.name,\n        short: val.short || val.name || val.value\n      });\n    }\n\n    if (_.isFunction(val.disabled)) {\n      this.disabled = val.disabled(answers);\n    } else {\n      this.disabled = val.disabled;\n    }\n  }\n\n};","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Desktop/React/netflix-clone/node_modules/firebase-tools/node_modules/inquirer/lib/objects/choice.js"],"names":["_","isString","require","isNumber","extend","isFunction","module","exports","Choice","constructor","val","answers","type","name","String","value","short","disabled"],"mappings":"AAAA;;AACA,MAAMA,CAAC,GAAG;AACRC,EAAAA,QAAQ,EAAEC,OAAO,CAAC,iBAAD,CADT;AAERC,EAAAA,QAAQ,EAAED,OAAO,CAAC,iBAAD,CAFT;AAGRE,EAAAA,MAAM,EAAEF,OAAO,CAAC,eAAD,CAHP;AAIRG,EAAAA,UAAU,EAAEH,OAAO,CAAC,mBAAD;AAJX,CAAV;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAI,MAAM,CAACC,OAAP,GAAiB,MAAMC,MAAN,CAAa;AAC5BC,EAAAA,WAAW,CAACC,GAAD,EAAMC,OAAN,EAAe;AACxB;AACA,QAAID,GAAG,YAAYF,MAAf,IAAyBE,GAAG,CAACE,IAAJ,KAAa,WAA1C,EAAuD;AACrD;AACA,aAAOF,GAAP;AACD;;AAED,QAAIV,CAAC,CAACC,QAAF,CAAWS,GAAX,KAAmBV,CAAC,CAACG,QAAF,CAAWO,GAAX,CAAvB,EAAwC;AACtC,WAAKG,IAAL,GAAYC,MAAM,CAACJ,GAAD,CAAlB;AACA,WAAKK,KAAL,GAAaL,GAAb;AACA,WAAKM,KAAL,GAAaF,MAAM,CAACJ,GAAD,CAAnB;AACD,KAJD,MAIO;AACLV,MAAAA,CAAC,CAACI,MAAF,CAAS,IAAT,EAAeM,GAAf,EAAoB;AAClBG,QAAAA,IAAI,EAAEH,GAAG,CAACG,IAAJ,IAAYH,GAAG,CAACK,KADJ;AAElBA,QAAAA,KAAK,EAAE,WAAWL,GAAX,GAAiBA,GAAG,CAACK,KAArB,GAA6BL,GAAG,CAACG,IAFtB;AAGlBG,QAAAA,KAAK,EAAEN,GAAG,CAACM,KAAJ,IAAaN,GAAG,CAACG,IAAjB,IAAyBH,GAAG,CAACK;AAHlB,OAApB;AAKD;;AAED,QAAIf,CAAC,CAACK,UAAF,CAAaK,GAAG,CAACO,QAAjB,CAAJ,EAAgC;AAC9B,WAAKA,QAAL,GAAgBP,GAAG,CAACO,QAAJ,CAAaN,OAAb,CAAhB;AACD,KAFD,MAEO;AACL,WAAKM,QAAL,GAAgBP,GAAG,CAACO,QAApB;AACD;AACF;;AAzB2B,CAA9B","sourcesContent":["'use strict';\nconst _ = {\n  isString: require('lodash/isString'),\n  isNumber: require('lodash/isNumber'),\n  extend: require('lodash/extend'),\n  isFunction: require('lodash/isFunction'),\n};\n\n/**\n * Choice object\n * Normalize input as choice object\n * @constructor\n * @param {Number|String|Object} val  Choice value. If an object is passed, it should contains\n *                                    at least one of `value` or `name` property\n */\n\nmodule.exports = class Choice {\n  constructor(val, answers) {\n    // Don't process Choice and Separator object\n    if (val instanceof Choice || val.type === 'separator') {\n      // eslint-disable-next-line no-constructor-return\n      return val;\n    }\n\n    if (_.isString(val) || _.isNumber(val)) {\n      this.name = String(val);\n      this.value = val;\n      this.short = String(val);\n    } else {\n      _.extend(this, val, {\n        name: val.name || val.value,\n        value: 'value' in val ? val.value : val.name,\n        short: val.short || val.name || val.value,\n      });\n    }\n\n    if (_.isFunction(val.disabled)) {\n      this.disabled = val.disabled(answers);\n    } else {\n      this.disabled = val.disabled;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}